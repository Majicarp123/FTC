import com.qualcomm.robotcore.eventloop.opmode.Autonomous;
import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.hardware.DcMotor;
import com.qualcomm.robotcore.hardware.DcMotorSimple;
import com.qualcomm.robotcore.hardware.Servo;
import com.qualcomm.robotcore.hardware.WebcamName;
import org.openftc.easyopencv.OpenCvCamera;
import org.openftc.easyopencv.OpenCvCameraFactory;
import org.openftc.easyopencv.OpenCvCameraRotation;
import org.openftc.easyopencv.OpenCvWebcam;
import package.path.ColorDetectionPipeline;

@Autonomous
public class AutonomousCode extends LinearOpMode {
    DcMotor leftMotor, rightMotor, linearSlide;
    Servo servoClaw;
    String color;
    OpenCvCamera webcam;

    @Override
    public void runOpMode() {
        leftMotor = hardwareMap.get(DcMotor.class, "left_motor");
        rightMotor = hardwareMap.get(DcMotor.class, "right_motor");
        linearSlide = hardwareMap.get(DcMotor.class, "linear_slide");
        servoClaw = hardwareMap.get(Servo.class, "servo_claw");
        int cameraMonitorViewId = hardwareMap.appContext.getResources().getIdentifier("cameraMonitorViewId", "id", hardwareMap.appContext.getPackageName());
        webcam = OpenCvCameraFactory         .createWebcam(hardwareMap.get(WebcamName.class, "Webcam 1"), cameraMonitorViewId);
        webcam.openCameraDevice();
        webcam.setPipeline(new ColorDetectionPipeline());
        webcam.startStreaming(320, 240, OpenCvCameraRotation.UPRIGHT);

        waitForStart();

        color = ((ColorDetectionPipeline) webcam.getPipeline()).getColorString();
        telemetry.addData("Color: ", color);
        telemetry.update();

        // rotate 35 degrees to the left
        leftMotor.setPower(0.5);
        rightMotor.setPower(-0.5);
        sleep(500);
        leftMotor.setPower(0);
        rightMotor.setPower(0);

        //drive forward 2 inches
        leftMotor.setPower(-0.5);
        rightMotor.setPower(-0.5);
        sleep(1000);
        leftMotor.setPower(0);
        rightMotor.setPower(0);

        //raise linear slide 14 inches
        linearSlide.setPower(1);
        sleep(14000);
        linearSlide.setPower(0);

        //open servo
        servoClaw.setPosition(1);

        if (color.equals("green")) {
            //drive to the left parking zone
            leftMotor.setPower(-0.5);
            rightMotor.setPower(-0.5);
            sleep(2000);
            leftMotor.setPower(0);
            rightMotor.setPower(0);
        } else if (color.equals("black")) {
            //drive to the middle parking zone
            leftMotor.setPower(-0.5);
            rightMotor.setPower(-0.5);
            sleep(4000);
            leftMotor.setPower(0);
            rightMotor.setPower(0);
        } else if (color.equals("purple")) {
            //drive to the right parking zone
            leftMotor.setPower(-0.5);
            rightMotor.setPower(-0.5);
            sleep(6000);
            leftMotor.setPower(0);
            rightMotor.setPower(0);
        }
    }
}
